I first start two server.
# GPU 2 (终端 1)
python -m sglang.launch_server \
--model-path "/nas/models/Meta-Llama-3-8B-Instruct" \
--host "0.0.0.0" \
--port 40005 \
--base-gpu-id 2

# GPU 3 (终端 2)
python -m sglang.launch_server \
--model-path "/nas/models/Meta-Llama-3-8B-Instruct" \
--host "0.0.0.0" \
--port 40006 \
--base-gpu-id 3

and then:

(lg) root:/nas/ganluo/sglang_CUSTOM# python /nas/ganluo/sglang_CUSTOM/start_test_router.py
启动路由器（启用请求追踪）...
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:367: 🚧 Initializing Prometheus metrics on 127.0.0.1:29000
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:376: 🚧 Initializing router on 127.0.0.1:30009
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:377: 🚧 Router mode: Regular { worker_urls: ["http://localhost:30005", "http://localhost:30006"] }
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:378: 🚧 Policy: CacheAware { cache_threshold: 0.5, balance_abs_threshold: 32, balance_rel_threshold: 1.0001, eviction_interval_secs: 60, max_tree_size: 16777216 }
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:379: 🚧 Max payload size: 256 MB
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:389: 🚧 Service discovery disabled
2025-07-28 02:25:21  INFO sglang_router_rs::routers::router: src/routers/router.rs:181: All workers are healthy
2025-07-28 02:25:21  INFO sglang_router_rs::request_tracker: src/request_tracker.rs:65: Initializing request tracker with max_entries=100000, ttl=3600s
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:426: ✅ Serving router on 127.0.0.1:30009
2025-07-28 02:25:21  INFO sglang_router_rs::server: src/server.rs:427: ✅ Serving workers on ["http://localhost:30005", "http://localhost:30006"]

and then:

# GPU 2 (终端 1):
Capturing batches (bs=1 avail_mem=8.41 GB): 100%|██████████████████████████████████████████| 23/23 [00:08<00:00,  2.72it/s]
[2025-07-28 10:23:29] Capture cuda graph end. Time elapsed: 9.22 s. mem usage=1.07 GB. avail mem=8.40 GB.
[2025-07-28 10:23:29] max_total_num_tokens=439737, chunked_prefill_size=8192, max_prefill_tokens=16384, max_running_requests=4096, context_len=8192, available_gpu_mem=8.40 GB
[2025-07-28 10:23:30] INFO:     Started server process [83578]
[2025-07-28 10:23:30] INFO:     Waiting for application startup.
[2025-07-28 10:23:30] INFO:     Application startup complete.
[2025-07-28 10:23:30] INFO:     Uvicorn running on http://0.0.0.0:30005 (Press CTRL+C to quit)
[2025-07-28 10:23:31] INFO:     127.0.0.1:50340 - "GET /get_model_info HTTP/1.1" 200 OK
[2025-07-28 10:23:31] Prefill batch. #new-seq: 1, #new-token: 7, #cached-token: 0, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:23:33] INFO:     127.0.0.1:50350 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:23:33] The server is fired up and ready to roll!
[2025-07-28 10:25:21] INFO:     127.0.0.1:49580 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:21] INFO:     127.0.0.1:49594 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:31] INFO:     127.0.0.1:59712 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:41] INFO:     127.0.0.1:37952 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:51] INFO:     127.0.0.1:41048 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:01] INFO:     127.0.0.1:49274 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:11] INFO:     127.0.0.1:45156 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:21] INFO:     127.0.0.1:42054 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:31] INFO:     127.0.0.1:49248 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:31] Prefill batch. #new-seq: 1, #new-token: 9, #cached-token: 1, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:26:31] INFO:     127.0.0.1:49256 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:26:31] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:26:31] INFO:     127.0.0.1:49256 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:26:41] INFO:     127.0.0.1:47676 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:51] INFO:     127.0.0.1:35594 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:01] INFO:     127.0.0.1:41722 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:11] INFO:     127.0.0.1:38248 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:21] INFO:     127.0.0.1:52072 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:24] Prefill batch. #new-seq: 1, #new-token: 1, #cached-token: 9, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:27:24] INFO:     127.0.0.1:46928 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:27:25] Prefill batch. #new-seq: 1, #new-token: 1, #cached-token: 9, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:27:25] Decode batch. #running-req: 1, #token: 13, token usage: 0.00, cuda graph: True, gen throughput (token/s): 0.17, #queue-req: 0, 
[2025-07-28 10:27:25] INFO:     127.0.0.1:46928 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:27:31] INFO:     127.0.0.1:46934 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:41] INFO:     127.0.0.1:42930 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:51] INFO:     127.0.0.1:54568 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:28:01] INFO:     127.0.0.1:57696 - "GET /health HTTP/1.1" 200 OK

# GPU 3 (终端 2):
Capturing batches (bs=1 avail_mem=8.53 GB): 100%|██████████████████████████████████████████| 23/23 [00:04<00:00,  5.31it/s]
[2025-07-28 10:23:39] Capture cuda graph end. Time elapsed: 4.55 s. mem usage=1.07 GB. avail mem=8.53 GB.
[2025-07-28 10:23:39] max_total_num_tokens=439212, chunked_prefill_size=8192, max_prefill_tokens=16384, max_running_requests=4096, context_len=8192, available_gpu_mem=8.53 GB
[2025-07-28 10:23:39] INFO:     Started server process [84355]
[2025-07-28 10:23:39] INFO:     Waiting for application startup.
[2025-07-28 10:23:39] INFO:     Application startup complete.
[2025-07-28 10:23:39] INFO:     Uvicorn running on http://0.0.0.0:30006 (Press CTRL+C to quit)
[2025-07-28 10:23:40] INFO:     127.0.0.1:51940 - "GET /get_model_info HTTP/1.1" 200 OK
[2025-07-28 10:23:40] Prefill batch. #new-seq: 1, #new-token: 7, #cached-token: 0, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:23:42] INFO:     127.0.0.1:51952 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:23:42] The server is fired up and ready to roll!
[2025-07-28 10:25:21] INFO:     127.0.0.1:39346 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:21] INFO:     127.0.0.1:39356 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:31] INFO:     127.0.0.1:59676 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:41] INFO:     127.0.0.1:34780 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:25:51] INFO:     127.0.0.1:40930 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:01] INFO:     127.0.0.1:53038 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:11] INFO:     127.0.0.1:54580 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:21] INFO:     127.0.0.1:37234 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:31] Prefill batch. #new-seq: 1, #new-token: 9, #cached-token: 1, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:26:31] INFO:     127.0.0.1:60562 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:26:31] INFO:     127.0.0.1:60576 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:31] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:26:31] INFO:     127.0.0.1:60562 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:26:31] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:26:32] INFO:     127.0.0.1:60562 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:26:41] INFO:     127.0.0.1:41900 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:26:51] INFO:     127.0.0.1:51138 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:01] INFO:     127.0.0.1:48622 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:11] INFO:     127.0.0.1:45076 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:21] INFO:     127.0.0.1:44468 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:24] Prefill batch. #new-seq: 1, #new-token: 1, #cached-token: 9, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:27:24] Decode batch. #running-req: 1, #token: 13, token usage: 0.00, cuda graph: True, gen throughput (token/s): 0.18, #queue-req: 0, 
[2025-07-28 10:27:24] INFO:     127.0.0.1:44470 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:27:24] Prefill batch. #new-seq: 1, #new-token: 1, #cached-token: 9, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:27:25] INFO:     127.0.0.1:44470 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:27:25] Prefill batch. #new-seq: 1, #new-token: 1, #cached-token: 9, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 10:27:25] INFO:     127.0.0.1:44470 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 10:27:31] INFO:     127.0.0.1:51098 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:41] INFO:     127.0.0.1:57940 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:27:51] INFO:     127.0.0.1:34956 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:28:01] INFO:     127.0.0.1:44296 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:28:11] INFO:     127.0.0.1:45394 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 10:28:21] INFO:     127.0.0.1:46520 - "GET /health HTTP/1.1" 200 OK


(lg) root:/nas/ganluo/sglang_CUSTOM# python /nas/ganluo/sglang_CUSTOM/test_request_tracking.py
=== SGLang Router 请求追踪测试 ===

✅ 路由器健康检查通过

发送测试请求...
✅ 请求 1 发送成功: test-req-1753669591082-0
✅ 请求 2 发送成功: test-req-1753669591389-1
✅ 请求 3 发送成功: test-req-1753669591594-2
✅ 请求 4 发送成功: test-req-1753669591770-3
✅ 请求 5 发送成功: test-req-1753669591944-4

等待请求处理...

查询请求追踪信息...
❌ 无法获取请求追踪: 404

批量查询结果: 找到 0 个请求

最近的请求: 5 个
(lg) root:/nas/ganluo/sglang_CUSTOM# python /nas/ganluo/sglang_CUSTOM/test_request_tracking.py
=== SGLang Router 请求追踪测试 ===

✅ 路由器健康检查通过

发送测试请求...
✅ 请求 1 发送成功: test-req-1753669644572-0
✅ 请求 2 发送成功: test-req-1753669644752-1
✅ 请求 3 发送成功: test-req-1753669644931-2
✅ 请求 4 发送成功: test-req-1753669645104-3
✅ 请求 5 发送成功: test-req-1753669645277-4

等待请求处理...

查询请求追踪信息...
❌ 无法获取请求追踪: 404

批量查询结果: 找到 0 个请求

最近的请求: 10 个
(lg) root:/nas/ganluo/sglang_CUSTOM# 

接下来, 按照要求, 我需要测试:

(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/traces
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/api/traces
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/trace
(lg) root:/nas/ganluo/sglang_CUSTOM# python -m sglang_router_rs --help
/usr/local/conda/envs/lg/bin/python: No module named sglang_router_rs.__main__; 'sglang_router_rs' is a package and cannot be directly executed
(lg) root:/nas/ganluo/sglang_CUSTOM# 


那么重新发送一些命令之后?

(lg) root:/nas/ganluo/sglang_CUSTOM# python /nas/ganluo/sglang_CUSTOM/test_request_tracking.py
=== SGLang Router 请求追踪测试 ===

✅ 路由器健康检查通过

发送测试请求...
✅ 请求 1 发送成功: test-req-1753670358418-0
✅ 请求 2 发送成功: test-req-1753670358625-1
✅ 请求 3 发送成功: test-req-1753670358829-2
✅ 请求 4 发送成功: test-req-1753670359003-3
✅ 请求 5 发送成功: test-req-1753670359178-4

等待请求处理...

查询请求追踪信息...
❌ 无法获取请求追踪: 404

批量查询结果: 找到 0 个请求

最近的请求: 5 个
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/traces
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/api/traces
(lg) root:/nas/ganluo/sglang_CUSTOM# curl http://localhost:30009/trace
(lg) root:/nas/ganluo/sglang_CUSTOM# python -m sglang_router_rs --help
/usr/local/conda/envs/lg/bin/python: No module named sglang_router_rs.__main__; 'sglang_router_rs' is a package and cannot be directly executed
(lg) root:/nas/ganluo/sglang_CUSTOM# 



### 完成了重新编译之后：

(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# python /nas/ganluo/sglang_CUSTOM/test_request_tracking.py
=== SGLang Router 请求追踪测试 ===

✅ 路由器健康检查通过

发送测试请求...
✅ 请求 1 发送成功: test-req-1753672653412-0
✅ 请求 2 发送成功: test-req-1753672653634-1
✅ 请求 3 发送成功: test-req-1753672653846-2
✅ 请求 4 发送成功: test-req-1753672654020-3
✅ 请求 5 发送成功: test-req-1753672654195-4

等待请求处理...

查询请求追踪信息...
❌ 无法获取请求追踪: 404

批量查询结果: 找到 0 个请求

最近的请求: 5 个
(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# curl http://localhost:30009/v1/traces/stats
{"error":"Request not found","request_id":"stats"}(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# 
(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# curl http://localhost:30009/v1/traces?limit=10
[{"request_id":"req_1abfdc5a-3a09-4fa5-babe-f0d8e63eef6d","worker_url":"http://localhost:30005","node_id":"gpu_4","timestamp":"2025-07-28T03:17:34.195873012Z","routing_policy":"cache_aware","status":"completed","route":"/generate","cache_hit":null,"input_tokens":7,"completion_time":"2025-07-28T03:17:34.268551921Z","error_message":null},{"request_id":"req_7db6020d-3014-441f-8f4a-e81c37bf7ca9","worker_url":"http://localhost:30006","node_id":"gpu_5","timestamp":"2025-07-28T03:17:34.020721004Z","routing_policy":"cache_aware","status":"completed","route":"/generate","cache_hit":null,"input_tokens":7,"completion_time":"2025-07-28T03:17:34.095191974Z","error_message":null},{"request_id":"req_2fcd533b-d5a1-49fc-8779-a3880c684193","worker_url":"http://localhost:30005","node_id":"gpu_4","timestamp":"2025-07-28T03:17:33.846508695Z","routing_policy":"cache_aware","status":"completed","route":"/generate","cache_hit":null,"input_tokens":7,"completion_time":"2025-07-28T03:17:33.920134348Z","error_message":null},{"request_id":"req_2cd42203-50b8-4b4c-820d-487ba7512faf","worker_url":"http://localhost:30006","node_id":"gpu_5","timestamp":"2025-07-28T03:17:33.635332106Z","routing_policy":"cache_aware","status":"completed","route":"/generate","cache_hit":null,"input_tokens":7,"completion_time":"2025-07-28T03:17:33.745890854Z","error_message":null},{"request_id":"req_f43f0982-88ec-4452-aa26-166e9ef3ec3e","worker_url":"http://localhost:30005","node_id":"gpu_4","timestamp":"2025-07-28T03:17:33.413259586Z","routing_policy":"cache_aware","status":"completed","route":"/generate","cache_hit":null,"input_tokens":7,"completion_time":"2025-07-28T03:17:33.534459428Z","error_message":null}](lg) root:/nas/ganluo/sglang_CUSTOM/(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# # 发送测试请求
curl -X POST http://localhost:30009/generate \
  -H "Content-Type: application/json" \
  -H "X-Request-Id: test-manual-123" \
  -d '{
    "text": "Hello world",
    "sampling_params": {
      "max_new_tokens": 10,
      "temperature": 0.7
    }
  }'
{"text":"! I'm a simple bot that can help you","meta_info":{"id":"b53ff5aacb394bba94511b23a1701a00","finish_reason":{"type":"length","length":10},"prompt_tokens":3,"completion_tokens":10,"cached_tokens":1,"e2e_latency":0.07783317565917969}}(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# curl hcurl http://localhost:30009/v1/traces/test-manual-123
{"error":"Request not found","request_id":"test-manual-123"}(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# 


### 第三个版本的修改并且编译并且安装之后：

(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# python /nas/ganluo/sglang_CUSTOM/test_request_tracking_fixed.py
=== SGLang Router 请求追踪测试 ===

✅ 路由器健康检查通过

发送测试请求...
❌ 请求 1 出错: 200, message='Attempt to decode JSON with unexpected mimetype: ', url='http://localhost:30009/generate'
❌ 请求 2 出错: 200, message='Attempt to decode JSON with unexpected mimetype: ', url='http://localhost:30009/generate'
❌ 请求 3 出错: 200, message='Attempt to decode JSON with unexpected mimetype: ', url='http://localhost:30009/generate'
❌ 请求 4 出错: 200, message='Attempt to decode JSON with unexpected mimetype: ', url='http://localhost:30009/generate'
❌ 请求 5 出错: 200, message='Attempt to decode JSON with unexpected mimetype: ', url='http://localhost:30009/generate'

等待请求处理...

查询请求追踪信息...

找到 5 个最近的请求

请求 1:
  请求ID: req_0fcd1a38-1054-4975-8563-2844cd421737
  节点: gpu_4 (http://localhost:30005)
  路由策略: cache_aware
  状态: completed
  输入tokens: 7
  完成时间: 2025-07-28T03:34:18.420146326Z

请求 2:
  请求ID: req_a5d33b73-2169-402f-8090-a3d0ac215406
  节点: gpu_5 (http://localhost:30006)
  路由策略: cache_aware
  状态: completed
  输入tokens: 7
  完成时间: 2025-07-28T03:34:18.247289069Z

请求 3:
  请求ID: req_aaceb54a-702f-456e-9db6-c4db7afac4b6
  节点: gpu_4 (http://localhost:30005)
  路由策略: cache_aware
  状态: completed
  输入tokens: 7
  完成时间: 2025-07-28T03:34:18.071940625Z

请求 4:
  请求ID: req_717e6263-fc7f-46be-8404-06c136988c43
  节点: gpu_5 (http://localhost:30006)
  路由策略: cache_aware
  状态: completed
  输入tokens: 7
  完成时间: 2025-07-28T03:34:17.897529731Z

请求 5:
  请求ID: req_d6a4080d-a037-4fcf-bcee-baa7a98ba948
  节点: gpu_4 (http://localhost:30005)
  路由策略: cache_aware
  状态: completed
  输入tokens: 7
  完成时间: 2025-07-28T03:34:17.691467184Z

追踪统计信息:
Traceback (most recent call last):
  File "/nas/ganluo/sglang_CUSTOM/test_request_tracking_fixed.py", line 118, in <module>
    asyncio.run(test_request_tracking())
  File "/usr/local/conda/envs/lg/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/conda/envs/lg/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/nas/ganluo/sglang_CUSTOM/test_request_tracking_fixed.py", line 103, in test_request_tracking
    print(f"  总请求数: {stats['total_requests']}")
KeyError: 'total_requests'
(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# curl http://localhost:30009/v1/traces/stats
{"config":{"enabled":true,"max_entries":100000,"ttl_seconds":3600},"newest_trace":"2025-07-28T03:34:18.348059489Z","node_distribution":{"gpu_4":3,"gpu_5":2},"oldest_trace":"2025-07-28T03:34:17.584325373Z","route_distribution":{"/generate":5},"status_distribution":{"Completed":5},"total_traces":5}(lg) root:/nas/ganluo/sglang_CUSTOM/sgl-router# 


(lg) root:/nas/ganluo/sglang_CUSTOM# conda deactivate
(zp) root:/nas/ganluo/sglang_CUSTOM# conda activate lg
(lg) root:/nas/ganluo/sglang_CUSTOM# python /nas/ganluo/sglang_CUSTOM/start_test_router.py
启动路由器（启用请求追踪）...
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:331: 🚧 Initializing Prometheus metrics on 127.0.0.1:29000
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:340: 🚧 Initializing router on 127.0.0.1:30009
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:341: 🚧 Router mode: Regular { worker_urls: ["http://localhost:30005", "http://localhost:30006"] }
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:342: 🚧 Policy: CacheAware { cache_threshold: 0.5, balance_abs_threshold: 32, balance_rel_threshold: 1.0001, eviction_interval_secs: 60, max_tree_size: 16777216 }
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:343: 🚧 Max payload size: 256 MB
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:353: 🚧 Service discovery disabled
2025-07-28 03:33:54  INFO sglang_router_rs::routers::router: src/routers/router.rs:181: All workers are healthy
2025-07-28 03:33:54  INFO sglang_router_rs::request_tracker: src/request_tracker.rs:65: Initializing request tracker with max_entries=100000, ttl=3600s
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:390: ✅ Serving router on 127.0.0.1:30009
2025-07-28 03:33:54  INFO sglang_router_rs::server: src/server.rs:391: ✅ Serving workers on ["http://localhost:30005", "http://localhost:30006"]
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:430: Before eviction - Used size per tenant:
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:432: Tenant: http://localhost:30005, Size: 60
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:432: Tenant: http://localhost:30006, Size: 44
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:481: After eviction - Used size per tenant:
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:483: Tenant: http://localhost:30005, Size: 60
2025-07-28 03:34:54  INFO sglang_router_rs::tree: src/tree.rs:483: Tenant: http://localhost:30006, Size: 44
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:430: Before eviction - Used size per tenant:
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:432: Tenant: http://localhost:30005, Size: 60
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:432: Tenant: http://localhost:30006, Size: 44
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:481: After eviction - Used size per tenant:
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:483: Tenant: http://localhost:30005, Size: 60
2025-07-28 03:35:54  INFO sglang_router_rs::tree: src/tree.rs:483: Tenant: http://localhost:30006, Size: 44


cuda:2 
Capturing batches (bs=1 avail_mem=8.53 GB): 100%|██████████████████████████████████████████| 23/23 [00:06<00:00,  3.77it/s]
[2025-07-28 11:32:30] Capture cuda graph end. Time elapsed: 6.33 s. mem usage=1.07 GB. avail mem=8.53 GB.
[2025-07-28 11:32:30] max_total_num_tokens=439212, chunked_prefill_size=8192, max_prefill_tokens=16384, max_running_requests=4096, context_len=8192, available_gpu_mem=8.53 GB
[2025-07-28 11:32:31] INFO:     Started server process [257297]
[2025-07-28 11:32:31] INFO:     Waiting for application startup.
[2025-07-28 11:32:31] INFO:     Application startup complete.
[2025-07-28 11:32:31] INFO:     Uvicorn running on http://0.0.0.0:30005 (Press CTRL+C to quit)
[2025-07-28 11:32:32] INFO:     127.0.0.1:51290 - "GET /get_model_info HTTP/1.1" 200 OK
[2025-07-28 11:32:32] Prefill batch. #new-seq: 1, #new-token: 7, #cached-token: 0, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:32:33] INFO:     127.0.0.1:51302 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:32:33] The server is fired up and ready to roll!
[2025-07-28 11:33:54] INFO:     127.0.0.1:59070 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:33:54] INFO:     127.0.0.1:59076 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:04] INFO:     127.0.0.1:59416 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:14] INFO:     127.0.0.1:44236 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:17] Prefill batch. #new-seq: 1, #new-token: 9, #cached-token: 1, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:34:17] INFO:     127.0.0.1:44242 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:34:17] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:34:18] INFO:     127.0.0.1:44242 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:34:18] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:34:18] INFO:     127.0.0.1:44242 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:34:24] INFO:     127.0.0.1:53648 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:34] INFO:     127.0.0.1:48430 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:44] INFO:     127.0.0.1:38794 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:54] INFO:     127.0.0.1:50724 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:04] INFO:     127.0.0.1:48456 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:14] INFO:     127.0.0.1:45980 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:24] INFO:     127.0.0.1:49808 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:34] INFO:     127.0.0.1:57024 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:44] INFO:     127.0.0.1:49608 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:54] INFO:     127.0.0.1:57980 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:04] INFO:     127.0.0.1:45866 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:14] INFO:     127.0.0.1:49830 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:24] INFO:     127.0.0.1:51296 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:34] INFO:     127.0.0.1:34774 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:44] INFO:     127.0.0.1:50858 - "GET /health HTTP/1.1" 200 OK


cuda:3
Capturing batches (bs=1 avail_mem=8.53 GB): 100%|██████████████████████████████████████████| 23/23 [00:05<00:00,  4.51it/s]
[2025-07-28 11:32:38] Capture cuda graph end. Time elapsed: 5.36 s. mem usage=1.07 GB. avail mem=8.53 GB.
[2025-07-28 11:32:38] max_total_num_tokens=439212, chunked_prefill_size=8192, max_prefill_tokens=16384, max_running_requests=4096, context_len=8192, available_gpu_mem=8.53 GB
[2025-07-28 11:32:39] INFO:     Started server process [257774]
[2025-07-28 11:32:39] INFO:     Waiting for application startup.
[2025-07-28 11:32:39] INFO:     Application startup complete.
[2025-07-28 11:32:39] INFO:     Uvicorn running on http://0.0.0.0:30006 (Press CTRL+C to quit)
[2025-07-28 11:32:40] INFO:     127.0.0.1:42480 - "GET /get_model_info HTTP/1.1" 200 OK
[2025-07-28 11:32:40] Prefill batch. #new-seq: 1, #new-token: 7, #cached-token: 0, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:32:40] INFO:     127.0.0.1:42492 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:32:40] The server is fired up and ready to roll!
[2025-07-28 11:33:54] INFO:     127.0.0.1:51876 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:33:54] INFO:     127.0.0.1:51886 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:04] INFO:     127.0.0.1:32894 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:14] INFO:     127.0.0.1:34058 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:17] Prefill batch. #new-seq: 1, #new-token: 9, #cached-token: 1, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:34:17] INFO:     127.0.0.1:34064 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:34:18] Prefill batch. #new-seq: 1, #new-token: 6, #cached-token: 4, token usage: 0.00, #running-req: 0, #queue-req: 0, 
[2025-07-28 11:34:18] INFO:     127.0.0.1:34064 - "POST /generate HTTP/1.1" 200 OK
[2025-07-28 11:34:24] INFO:     127.0.0.1:52482 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:34] INFO:     127.0.0.1:40816 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:44] INFO:     127.0.0.1:46464 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:34:54] INFO:     127.0.0.1:36582 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:04] INFO:     127.0.0.1:40576 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:14] INFO:     127.0.0.1:48972 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:24] INFO:     127.0.0.1:36936 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:34] INFO:     127.0.0.1:46330 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:44] INFO:     127.0.0.1:33296 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:35:54] INFO:     127.0.0.1:36956 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:04] INFO:     127.0.0.1:39576 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:14] INFO:     127.0.0.1:41814 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:24] INFO:     127.0.0.1:38928 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:34] INFO:     127.0.0.1:60724 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:44] INFO:     127.0.0.1:37550 - "GET /health HTTP/1.1" 200 OK
[2025-07-28 11:36:54] INFO:     127.0.0.1:51316 - "GET /health HTTP/1.1" 200 OK

