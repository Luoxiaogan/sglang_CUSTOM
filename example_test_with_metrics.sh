#!/bin/bash

# SGLang 完整测试示例：同时记录路由决策和请求执行
# 
# 本脚本展示如何：
# 1. 启动带指标记录的路由器
# 2. 发送测试请求并记录执行情况
# 3. 组织输出文件

# =============================================================================
# 配置
# =============================================================================

# 创建测试输出目录
TEST_DIR="/tmp/sglang_test_$(date +%Y%m%d_%H%M%S)"
ROUTER_METRICS_DIR="$TEST_DIR/router_metrics"
REQUEST_METRICS_DIR="$TEST_DIR/request_metrics"

echo "创建测试目录: $TEST_DIR"
mkdir -p "$ROUTER_METRICS_DIR"
mkdir -p "$REQUEST_METRICS_DIR"

# =============================================================================
# 步骤 1: 启动路由器（带决策记录）
# =============================================================================

echo ""
echo "=========================================="
echo "步骤 1: 启动路由器"
echo "=========================================="

# 配置路由器
export POLICY="marginal_utility_recorder"
export MARGINAL_UTILITY_OUTPUT_DIR="$ROUTER_METRICS_DIR"

# 启动路由器（在后台）
echo "启动路由器，决策记录将保存到: $ROUTER_METRICS_DIR"
bash /Users/luogan/Code/sglang/bash_start_router.sh &
ROUTER_PID=$!

# 等待路由器启动
echo "等待路由器启动..."
sleep 10

# =============================================================================
# 步骤 2: 发送测试请求
# =============================================================================

echo ""
echo "=========================================="
echo "步骤 2: 发送测试请求"
echo "=========================================="

# 配置请求参数
export NUM_REQUESTS=100
export REQUEST_RATE=10.0
export OUTPUT_FILE="$REQUEST_METRICS_DIR/router_test_$(date +%Y%m%d_%H%M%S).csv"

echo "发送 $NUM_REQUESTS 个请求，结果将保存到: $OUTPUT_FILE"
bash /Users/luogan/Code/sglang/bash_send_req.sh

# =============================================================================
# 步骤 3: 停止路由器并整理结果
# =============================================================================

echo ""
echo "=========================================="
echo "步骤 3: 停止路由器"
echo "=========================================="

# 停止路由器
echo "停止路由器..."
kill $ROUTER_PID
wait $ROUTER_PID 2>/dev/null

# =============================================================================
# 步骤 4: 显示结果
# =============================================================================

echo ""
echo "=========================================="
echo "测试完成！结果文件位置："
echo "=========================================="
echo ""
echo "📁 测试目录: $TEST_DIR"
echo ""
echo "📊 路由器决策记录:"
ls -la "$ROUTER_METRICS_DIR"/*.csv 2>/dev/null || echo "  (无文件)"
echo ""
echo "📈 请求执行记录:"
ls -la "$REQUEST_METRICS_DIR"/*.csv 2>/dev/null || echo "  (无文件)"
echo ""
echo "提示：您可以使用 Python 分析这些 CSV 文件："
echo "  - 路由器决策：分析梯度、评分、选择原因"
echo "  - 请求执行：分析延迟、吞吐量、成功率"
echo "  - 关联分析：通过 request_id 关联两个文件"
echo ""
echo "=========================================="